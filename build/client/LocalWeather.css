/**
 * The css property used for elevation. In most cases this should not be changed. It is exposed
 * as a variable for abstraction / easy use when needing to reference the property directly, for
 * example in a `will-change` rule.
 */

/**
 * The default duration value for elevation transitions.
 */

/**
 * The default easing value for elevation transitions.
 */

/**
 * Applies the correct css rules to an element to give it the elevation specified by $z-value.
 * The $z-value must be between 0 and 24.
 */

/**
 * Returns a string that can be used as the value for a `transition` property for elevation.
 * Calling this function directly is useful in situations where a component needs to transition
 * more than one property.
 *
 * ```scss
 * .foo {
 *   transition: mdc-elevation-transition-rule(), opacity 100ms ease;
 *   will-change: $mdc-elevation-property, opacity;
 * }
 * ```
 */

/**
 * Applies the correct css rules needed to have an element transition between elevations.
 * This mixin should be applied to elements whose elevation values will change depending on their
 * context (e.g. when active or disabled).
 */

/**
 * Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.
 *
 * Usage Example:
 * ```scss
 * .mdc-foo {
 *   position: absolute;
 *   left: 0;
 *
 *   @include mdc-rtl {
 *     left: auto;
 *     right: 0;
 *   }
 *
 *   &__bar {
 *     margin-left: 4px;
 *     @include mdc-rtl(".mdc-foo") {
 *       margin-left: auto;
 *       margin-right: 4px;
 *     }
 *   }
 * }
 *
 * .mdc-foo--mod {
 *   padding-left: 4px;
 *
 *   @include mdc-rtl {
 *     padding-left: auto;
 *     padding-right: 4px;
 *   }
 * }
 * ```
 *
 * Note that this works by checking for [dir="rtl"] on an ancestor element. While this will work
 * in most cases, it will in some cases lead to false negatives, e.g.
 *
 * ```html
 * <html dir="rtl">
 *   <!-- ... -->
 *   <div dir="ltr">
 *     <div class="mdc-foo">Styled incorrectly as RTL!</div>
 *   </div>
 * </html>
 * ```
 *
 * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.
 */

/**
 * Takes a base box-model property - e.g. margin / border / padding - along with a default
 * direction and value, and emits rules which apply the value to the
 * "<base-property>-<default-direction>" property by default, but flips the direction
 * when within an RTL context.
 *
 * For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-box(margin, left, 8px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-left: 8px;
 *
 *   @include mdc-rtl {
 *     margin-right: 8px;
 *     margin-left: 0;
 *   }
 * }
 * ```
 * whereas:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-box(margin, right, 8px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-right: 8px;
 *
 *   @include mdc-rtl {
 *     margin-right: 0;
 *     margin-left: 8px;
 *   }
 * }
 * ```
 *
 * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,
 * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, ".mdc-component")`.
 *
 * Note that this function will always zero out the original value in an RTL context. If you're
 * trying to flip the values, use mdc-rtl-reflexive-property().
 */

/**
 * Takes a base property and emits rules that assign <base-property>-left to <left-value> and
 * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.
 * For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-property(margin, auto, 12px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-left: auto;
 *   margin-right: 12px;
 *
 *   @include mdc-rtl {
 *     margin-left: 12px;
 *     margin-right: auto;
 *   }
 * }
 * ```
 *
 * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.
 */

/**
 * Takes an argument specifying a horizontal position property (either "left" or "right") as well
 * as a value, and applies that value to the specified position in a LTR context, and flips it in a
 * RTL context. For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-position(left, 0);
 *   position: absolute;
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 *  .mdc-foo {
 *    position: absolute;
 *    left: 0;
 *    right: initial;
 *
 *    @include mdc-rtl {
 *      right: 0;
 *      left: initial;
 *    }
 *  }
 * ```
 * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.
 */

/* TODO(sgomes): Figure out what to do about desktop font sizes. */

/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */

/* TODO(sgomes): Figure out what to do about desktop font sizes. */

/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */

:root {
  --mdc-dialog-dark-theme-bg-color: #303030;
}

.mdc-dialog-mdc-dialog {
  display: flex;
  position: fixed;
  top: 0;
  left: 0;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  visibility: hidden;
  z-index: 5;
}

.mdc-dialog-mdc-dialog__backdrop {
  /* @alternate */
  background-color: rgba(0, 0, 0, 0.87);
  background-color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87));
  position: fixed;
  top: 0;
  left: 0;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  opacity: 0;
  z-index: -1;
}

.mdc-dialog-mdc-dialog__surface {
  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);
  /* @alternate */
  background-color: #fff;
  background-color: var(--mdc-theme-background, #fff);
  display: inline-flex;
  flex-direction: column;
  width: calc(100% - 30px);
  min-width: 640px;
  max-width: 865px;
  transform: translateY(150px) scale(0.8);
  border-radius: 2px;
  opacity: 0;
}

.mdc-dialog-mdc-dialog--theme-dark .mdc-dialog-mdc-dialog__surface,
.mdc-dialog-mdc-theme--dark .mdc-dialog-mdc-dialog__surface {
  /* @alternate */
  color: white;
  color: var(--mdc-theme-text-primary-on-dark, white);
  background-color: #303030;
  background-color: var(--mdc-dialog-dark-theme-bg-color, #303030);
}

[dir="rtl"] .mdc-dialog-mdc-dialog .mdc-dialog-mdc-dialog__surface,
.mdc-dialog-mdc-dialog[dir="rtl"] .mdc-dialog-mdc-dialog__surface {
  text-align: right;
}

.mdc-dialog-mdc-dialog__header {
  display: flex;
  align-items: center;
  padding: 24px 24px 0;
}

.mdc-dialog-mdc-dialog__header__empty {
  padding: 0;
}

[dir="rtl"] .mdc-dialog-mdc-dialog .mdc-dialog-mdc-dialog__header,
.mdc-dialog-mdc-dialog[dir="rtl"] .mdc-dialog-mdc-dialog__header {
  text-align: right;
}

.mdc-dialog-mdc-dialog__header__title {
  font-family: Roboto, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-size: 1.25rem;
  font-weight: 500;
  letter-spacing: 0.02em;
  line-height: 2rem;
  text-decoration: inherit;
  text-transform: inherit;
  flex: 1;
  margin: 0;
}

.mdc-dialog-mdc-dialog__body {
  /* @alternate */
  color: rgba(0, 0, 0, 0.54);
  color: var(--mdc-theme-text-secondary-on-light, rgba(0, 0, 0, 0.54));
  font-family: Roboto, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-size: 0.875rem;
  font-weight: 400;
  letter-spacing: 0.04em;
  line-height: 1.25rem;
  text-decoration: inherit;
  text-transform: inherit;
  margin-top: 20px;
  padding: 0 24px 24px;
}

.mdc-dialog-mdc-dialog--theme-dark.mdc-dialog-mdc-dialog__body,
.mdc-dialog-mdc-theme--dark .mdc-dialog-mdc-dialog__body {
  /* @alternate */
  color: rgba(255, 255, 255, 0.7);
  color: var(--mdc-theme-text-secondary-on-dark, rgba(255, 255, 255, 0.7));
}

.mdc-dialog-mdc-dialog__body--scrollable {
  max-height: 195px;
  border-top: 1px solid rgba(0, 0, 0, 0.1);
  border-bottom: 1px solid rgba(0, 0, 0, 0.1);
  overflow-x: auto;
  overflow-y: scroll;
  -webkit-overflow-scrolling: touch;
}

.mdc-dialog-mdc-dialog__footer {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: flex-end;
  padding: 8px;
}

.mdc-dialog-mdc-dialog__footer__button {
  margin-left: 0;
  margin-right: 8px;
}

[dir="rtl"] .mdc-dialog-mdc-dialog__footer__button,
.mdc-dialog-mdc-dialog__footer__button[dir="rtl"] {
  margin-left: 8px;
  margin-right: 0;
}

.mdc-dialog-mdc-dialog__footer__button:last-child {
  margin-left: 0;
  margin-right: 0;
}

[dir="rtl"] .mdc-dialog-mdc-dialog__footer__button:last-child,
.mdc-dialog-mdc-dialog__footer__button:last-child[dir="rtl"] {
  margin-left: 0;
  margin-right: 0;
}

.mdc-dialog-mdc-dialog__action {
  /* @alternate */
  color: #ff4081;
  color: var(--mdc-theme-secondary, #ff4081);
}

@media (max-width: 640px) {
  .mdc-dialog-mdc-dialog {
    min-width: 280px;
  }

  .mdc-dialog-mdc-dialog__surface {
    min-width: 280px;
  }

  .mdc-dialog-mdc-dialog__body {
    line-height: 24px;
  }
}

.mdc-dialog-mdc-dialog--animating {
  visibility: visible;
}

.mdc-dialog-mdc-dialog--animating .mdc-dialog-mdc-dialog__backdrop {
  transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1);
}

.mdc-dialog-mdc-dialog--animating .mdc-dialog-mdc-dialog--open .mdc-dialog-mdc-dialog__surface {
  transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);
}

.mdc-dialog-mdc-dialog--animating .mdc-dialog-mdc-dialog__surface {
  transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);
}

.mdc-dialog-mdc-dialog--open {
  visibility: visible;
}

.mdc-dialog-mdc-dialog--open .mdc-dialog-mdc-dialog__backdrop {
  opacity: .3;
}

.mdc-dialog-mdc-dialog--open .mdc-dialog-mdc-dialog__surface {
  transform: translateY(0) scale(1);
  opacity: 1;
}

.mdc-dialog-mdc-dialog-scroll-lock {
  height: 100vh;
  overflow: hidden;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */@keyframes mdc-button-mdc-ripple-fg-radius-in {
  from {
    animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);
  }

  to {
    transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
  }
}

@keyframes mdc-button-mdc-ripple-fg-opacity-in {
  from {
    animation-timing-function: linear;
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes mdc-button-mdc-ripple-fg-opacity-out {
  from {
    animation-timing-function: linear;
    opacity: 1;
  }

  to {
    opacity: 0;
  }
}

.mdc-button-mdc-ripple-surface--test-edge-var-bug {
  --mdc-ripple-surface-test-edge-var: 1px solid #000;
  visibility: hidden;
}

.mdc-button-mdc-ripple-surface--test-edge-var-bug::before {
  border: var(--mdc-ripple-surface-test-edge-var);
}

/**
 * The css property used for elevation. In most cases this should not be changed. It is exposed
 * as a variable for abstraction / easy use when needing to reference the property directly, for
 * example in a `will-change` rule.
 */

/**
 * The default duration value for elevation transitions.
 */

/**
 * The default easing value for elevation transitions.
 */

/**
 * Applies the correct css rules to an element to give it the elevation specified by $z-value.
 * The $z-value must be between 0 and 24.
 */

/**
 * Returns a string that can be used as the value for a `transition` property for elevation.
 * Calling this function directly is useful in situations where a component needs to transition
 * more than one property.
 *
 * ```scss
 * .foo {
 *   transition: mdc-elevation-transition-rule(), opacity 100ms ease;
 *   will-change: $mdc-elevation-property, opacity;
 * }
 * ```
 */

/**
 * Applies the correct css rules needed to have an element transition between elevations.
 * This mixin should be applied to elements whose elevation values will change depending on their
 * context (e.g. when active or disabled).
 */

/* TODO(sgomes): Figure out what to do about desktop font sizes. */

/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */

.mdc-button-mdc-button {
  font-family: Roboto, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-size: 0.875rem;
  font-weight: 500;
  letter-spacing: 0.04em;
  line-height: 2.25rem;
  text-decoration: none;
  text-transform: uppercase;
  --mdc-ripple-fg-size: 0;
  --mdc-ripple-left: 0;
  --mdc-ripple-top: 0;
  --mdc-ripple-fg-scale: 1;
  --mdc-ripple-fg-translate-end: 0;
  --mdc-ripple-fg-translate-start: 0;
  will-change: transform, opacity;
  -webkit-tap-highlight-color: transparent;
  display: inline-block;
  position: relative;
  box-sizing: border-box;
  min-width: 64px;
  height: 36px;
  padding: 0 16px;
  border: none;
  outline: none;
  text-align: center;
  user-select: none;
  -webkit-appearance: none;
  -webkit-tap-highlight-color: transparent;
  overflow: hidden;
  vertical-align: middle;
  border-radius: 2px;
}

.mdc-button-mdc-button::before,
.mdc-button-mdc-button::after {
  position: absolute;
  transition: opacity 250ms linear;
  border-radius: 50%;
  pointer-events: none;
  content: "";
}

.mdc-button-mdc-button::before,
.mdc-button-mdc-button::after {
  top: calc(50% - 100%);
  left: calc(50% - 100%);
  width: 200%;
  height: 200%;
}

.mdc-button-mdc-button.mdc-button-mdc-ripple-upgraded::before {
  top: calc(50% - 100%);
  left: calc(50% - 100%);
  width: 200%;
  height: 200%;
  transform: scale(var(--mdc-ripple-fg-scale, 0));
}

.mdc-button-mdc-button.mdc-button-mdc-ripple-upgraded--unbounded::before {
  top: var(--mdc-ripple-top, calc(50% - 50%));
  left: var(--mdc-ripple-left, calc(50% - 50%));
  width: var(--mdc-ripple-fg-size, 100%);
  height: var(--mdc-ripple-fg-size, 100%);
  transform: scale(var(--mdc-ripple-fg-scale, 0));
}

.mdc-button-mdc-button.mdc-button-mdc-ripple-upgraded::after {
  top: 0;
  left: 0;
  width: var(--mdc-ripple-fg-size, 100%);
  height: var(--mdc-ripple-fg-size, 100%);
  transform: scale(0);
  transform-origin: center center;
}

.mdc-button-mdc-button.mdc-button-mdc-ripple-upgraded--unbounded::after {
  top: var(--mdc-ripple-top, 0);
  left: var(--mdc-ripple-left, 0);
}

.mdc-button-mdc-button:active {
  outline: none;
}

.mdc-button-mdc-button:hover {
  cursor: pointer;
}

.mdc-button-mdc-button::-moz-focus-inner {
  padding: 0;
  border: 0;
}

.mdc-button-mdc-button:disabled {
  background-color: transparent;
  /* @alternate */
  color: rgba(0, 0, 0, 0.38);
  color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38));
  cursor: default;
  pointer-events: none;
}

.mdc-button-mdc-button--theme-dark .mdc-button-mdc-button:disabled,
.mdc-button-mdc-theme--dark .mdc-button-mdc-button:disabled {
  /* @alternate */
  color: rgba(255, 255, 255, 0.5);
  color: var(--mdc-theme-text-disabled-on-dark, rgba(255, 255, 255, 0.5));
}

.mdc-button-mdc-button:not(:disabled) {
  background-color: transparent;
}

.mdc-button-mdc-button:not(:disabled) {
  /* @alternate */
  color: #3f51b5;
  color: var(--mdc-theme-primary, #3f51b5);
}

.mdc-button-mdc-button::before,
.mdc-button-mdc-button::after {
  background-color: rgba(63, 81, 181, 0.16);
  opacity: 0;
}

@supports (background-color: color(green a(10%))) {
  .mdc-button-mdc-button::before,
  .mdc-button-mdc-button::after {
    background-color: color(var(--mdc-theme-primary, #3f51b5) a(16%));
  }
}

.mdc-button-mdc-button:not(.mdc-button-mdc-ripple-upgraded):hover::before,
.mdc-button-mdc-button:not(.mdc-button-mdc-ripple-upgraded):focus::before,
.mdc-button-mdc-button:not(.mdc-button-mdc-ripple-upgraded):active::after {
  transition-duration: 85ms;
  opacity: .6;
}

.mdc-button-mdc-button.mdc-button-mdc-ripple-upgraded--background-focused::before {
  opacity: .99999;
}

.mdc-button-mdc-button.mdc-button-mdc-ripple-upgraded--background-active-fill::before {
  transition-duration: 120ms;
  opacity: 1;
}

.mdc-button-mdc-button.mdc-button-mdc-ripple-upgraded::after {
  opacity: 0;
}

.mdc-button-mdc-button.mdc-button-mdc-ripple-upgraded--foreground-activation::after {
  animation: 300ms :local(mdc-ripple-fg-radius-in) forwards, 83ms :local(mdc-ripple-fg-opacity-in) forwards;
}

.mdc-button-mdc-button.mdc-button-mdc-ripple-upgraded--foreground-deactivation::after {
  animation: 83ms :local(mdc-ripple-fg-opacity-out);
  transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
}

.mdc-button-mdc-button--raised:disabled,
.mdc-button-mdc-button--unelevated:disabled {
  background-color: rgba(0, 0, 0, 0.12);
  /* @alternate */
  color: rgba(0, 0, 0, 0.38);
  color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38));
}

.mdc-button-mdc-button--theme-dark .mdc-button-mdc-button--raised:disabled,
.mdc-button-mdc-theme--dark .mdc-button-mdc-button--raised:disabled,
.mdc-button-mdc-button--theme-dark
  .mdc-button-mdc-button--unelevated:disabled,
.mdc-button-mdc-theme--dark
  .mdc-button-mdc-button--unelevated:disabled {
  background-color: rgba(255, 255, 255, 0.12);
  /* @alternate */
  color: rgba(0, 0, 0, 0.38);
  color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38));
}

.mdc-button-mdc-button--raised:not(:disabled),
.mdc-button-mdc-button--unelevated:not(:disabled) {
  /* @alternate */
  background-color: #3f51b5;
}

@supports not (-ms-ime-align: auto) {
  .mdc-button-mdc-button--raised:not(:disabled),
  .mdc-button-mdc-button--unelevated:not(:disabled) {
    background-color: var(--mdc-theme-primary, #3f51b5);
  }
}

.mdc-button-mdc-button--raised:not(:disabled),
.mdc-button-mdc-button--unelevated:not(:disabled) {
  /* @alternate */
  color: white;
  color: var(--mdc-theme-text-primary-on-primary, white);
}

.mdc-button-mdc-button--raised::before,
.mdc-button-mdc-button--raised::after,
.mdc-button-mdc-button--unelevated::before,
.mdc-button-mdc-button--unelevated::after {
  background-color: rgba(255, 255, 255, 0.32);
  opacity: 0;
}

@supports (background-color: color(green a(10%))) {
  .mdc-button-mdc-button--raised::before,
  .mdc-button-mdc-button--raised::after,
  .mdc-button-mdc-button--unelevated::before,
  .mdc-button-mdc-button--unelevated::after {
    background-color: color(var(--mdc-theme-text-primary-on-primary, white) a(32%));
  }
}

.mdc-button-mdc-button--raised:not(.mdc-button-mdc-ripple-upgraded):hover::before,
.mdc-button-mdc-button--raised:not(.mdc-button-mdc-ripple-upgraded):focus::before,
.mdc-button-mdc-button--raised:not(.mdc-button-mdc-ripple-upgraded):active::after,
.mdc-button-mdc-button--unelevated:not(.mdc-button-mdc-ripple-upgraded):hover::before,
.mdc-button-mdc-button--unelevated:not(.mdc-button-mdc-ripple-upgraded):focus::before,
.mdc-button-mdc-button--unelevated:not(.mdc-button-mdc-ripple-upgraded):active::after {
  transition-duration: 85ms;
  opacity: .6;
}

.mdc-button-mdc-button--raised.mdc-button-mdc-ripple-upgraded--background-focused::before,
.mdc-button-mdc-button--unelevated.mdc-button-mdc-ripple-upgraded--background-focused::before {
  opacity: .99999;
}

.mdc-button-mdc-button--raised.mdc-button-mdc-ripple-upgraded--background-active-fill::before,
.mdc-button-mdc-button--unelevated.mdc-button-mdc-ripple-upgraded--background-active-fill::before {
  transition-duration: 120ms;
  opacity: 1;
}

.mdc-button-mdc-button--raised.mdc-button-mdc-ripple-upgraded::after,
.mdc-button-mdc-button--unelevated.mdc-button-mdc-ripple-upgraded::after {
  opacity: 0;
}

.mdc-button-mdc-button--raised.mdc-button-mdc-ripple-upgraded--foreground-activation::after,
.mdc-button-mdc-button--unelevated.mdc-button-mdc-ripple-upgraded--foreground-activation::after {
  animation: 300ms :local(mdc-ripple-fg-radius-in) forwards, 83ms :local(mdc-ripple-fg-opacity-in) forwards;
}

.mdc-button-mdc-button--raised.mdc-button-mdc-ripple-upgraded--foreground-deactivation::after,
.mdc-button-mdc-button--unelevated.mdc-button-mdc-ripple-upgraded--foreground-deactivation::after {
  animation: 83ms :local(mdc-ripple-fg-opacity-out);
  transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
}

.mdc-button-mdc-button--raised {
  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);
  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);
  will-change: box-shadow;
}

.mdc-button-mdc-button--raised:hover,
.mdc-button-mdc-button--raised:focus {
  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);
}

.mdc-button-mdc-button--raised:active {
  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);
}

.mdc-button-mdc-button--raised:disabled {
  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);
}

.mdc-button-mdc-button--stroked {
  border-style: solid;
  border-width: 2px;
  line-height: 32px;
}

.mdc-button-mdc-button--stroked:disabled {
  /* @alternate */
  border-color: rgba(0, 0, 0, 0.38);
  border-color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38));
}

.mdc-button-mdc-button--theme-dark .mdc-button-mdc-button--stroked:disabled,
.mdc-button-mdc-theme--dark .mdc-button-mdc-button--stroked:disabled {
  /* @alternate */
  border-color: rgba(255, 255, 255, 0.5);
  border-color: var(--mdc-theme-text-disabled-on-dark, rgba(255, 255, 255, 0.5));
}

.mdc-button-mdc-button--stroked.mdc-button-mdc-button--dense {
  line-height: 27px;
}

.mdc-button-mdc-button--stroked:not(:disabled) {
  /* @alternate */
  border-color: #3f51b5;
  border-color: var(--mdc-theme-primary, #3f51b5);
}

.mdc-button-mdc-button--compact {
  padding: 0 8px;
}

.mdc-button-mdc-button--dense {
  height: 32px;
  font-size: .8125rem;
  line-height: 32px;
}

.mdc-button-mdc-button__icon {
  display: inline-block;
  width: 18px;
  height: 18px;
  margin-right: 8px;
  font-size: 18px;
  line-height: inherit;
  vertical-align: top;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64, *//**
 * The css property used for elevation. In most cases this should not be changed. It is exposed
 * as a variable for abstraction / easy use when needing to reference the property directly, for
 * example in a `will-change` rule.
 */

/**
 * The default duration value for elevation transitions.
 */

/**
 * The default easing value for elevation transitions.
 */

/**
 * Applies the correct css rules to an element to give it the elevation specified by $z-value.
 * The $z-value must be between 0 and 24.
 */

/**
 * Returns a string that can be used as the value for a `transition` property for elevation.
 * Calling this function directly is useful in situations where a component needs to transition
 * more than one property.
 *
 * ```scss
 * .foo {
 *   transition: mdc-elevation-transition-rule(), opacity 100ms ease;
 *   will-change: $mdc-elevation-property, opacity;
 * }
 * ```
 */

/**
 * Applies the correct css rules needed to have an element transition between elevations.
 * This mixin should be applied to elements whose elevation values will change depending on their
 * context (e.g. when active or disabled).
 */

/* TODO(sgomes): Figure out what to do about desktop font sizes. */

/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */

/**
 * Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.
 *
 * Usage Example:
 * ```scss
 * .mdc-foo {
 *   position: absolute;
 *   left: 0;
 *
 *   @include mdc-rtl {
 *     left: auto;
 *     right: 0;
 *   }
 *
 *   &__bar {
 *     margin-left: 4px;
 *     @include mdc-rtl(".mdc-foo") {
 *       margin-left: auto;
 *       margin-right: 4px;
 *     }
 *   }
 * }
 *
 * .mdc-foo--mod {
 *   padding-left: 4px;
 *
 *   @include mdc-rtl {
 *     padding-left: auto;
 *     padding-right: 4px;
 *   }
 * }
 * ```
 *
 * Note that this works by checking for [dir="rtl"] on an ancestor element. While this will work
 * in most cases, it will in some cases lead to false negatives, e.g.
 *
 * ```html
 * <html dir="rtl">
 *   <!-- ... -->
 *   <div dir="ltr">
 *     <div class="mdc-foo">Styled incorrectly as RTL!</div>
 *   </div>
 * </html>
 * ```
 *
 * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.
 */

/**
 * Takes a base box-model property - e.g. margin / border / padding - along with a default
 * direction and value, and emits rules which apply the value to the
 * "<base-property>-<default-direction>" property by default, but flips the direction
 * when within an RTL context.
 *
 * For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-box(margin, left, 8px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-left: 8px;
 *
 *   @include mdc-rtl {
 *     margin-right: 8px;
 *     margin-left: 0;
 *   }
 * }
 * ```
 * whereas:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-box(margin, right, 8px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-right: 8px;
 *
 *   @include mdc-rtl {
 *     margin-right: 0;
 *     margin-left: 8px;
 *   }
 * }
 * ```
 *
 * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,
 * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, ".mdc-component")`.
 *
 * Note that this function will always zero out the original value in an RTL context. If you're
 * trying to flip the values, use mdc-rtl-reflexive-property().
 */

/**
 * Takes a base property and emits rules that assign <base-property>-left to <left-value> and
 * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.
 * For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-property(margin, auto, 12px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-left: auto;
 *   margin-right: 12px;
 *
 *   @include mdc-rtl {
 *     margin-left: 12px;
 *     margin-right: auto;
 *   }
 * }
 * ```
 *
 * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.
 */

/**
 * Takes an argument specifying a horizontal position property (either "left" or "right") as well
 * as a value, and applies that value to the specified position in a LTR context, and flips it in a
 * RTL context. For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-position(left, 0);
 *   position: absolute;
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 *  .mdc-foo {
 *    position: absolute;
 *    left: 0;
 *    right: initial;
 *
 *    @include mdc-rtl {
 *      right: 0;
 *      left: initial;
 *    }
 *  }
 * ```
 * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.
 */

.mdc-card-mdc-card {
  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  box-sizing: border-box;
  padding: 0;
  border-radius: 2px;
  overflow: hidden;
}

.mdc-card-mdc-card__primary {
  padding: 16px;
}

.mdc-card-mdc-card__primary .mdc-card-mdc-card__title--large {
  padding-top: 8px;
}

.mdc-card-mdc-card__primary:last-child {
  padding-bottom: 24px;
}

.mdc-card-mdc-card__supporting-text {
  font-family: Roboto, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-size: 0.875rem;
  font-weight: 400;
  letter-spacing: 0.04em;
  line-height: 1.25rem;
  text-decoration: inherit;
  text-transform: inherit;
  /* @alternate */
  color: rgba(0, 0, 0, 0.87);
  color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87));
  box-sizing: border-box;
  padding: 8px 16px;
}

.mdc-card-mdc-card--theme-dark .mdc-card-mdc-card__supporting-text,
.mdc-card-mdc-theme--dark .mdc-card-mdc-card__supporting-text {
  /* @alternate */
  color: white;
  color: var(--mdc-theme-text-primary-on-dark, white);
}

.mdc-card-mdc-card__primary + .mdc-card-mdc-card__supporting-text {
  margin-top: -8px;
  padding-top: 0;
}

.mdc-card-mdc-card__supporting-text:last-child {
  padding-bottom: 24px;
}

.mdc-card-mdc-card__actions {
  display: flex;
  box-sizing: border-box;
  padding: 8px;
}

.mdc-card-mdc-card--theme-dark .mdc-card-mdc-card__actions,
.mdc-card-mdc-theme--dark .mdc-card-mdc-card__actions {
  /* @alternate */
  color: white;
  color: var(--mdc-theme-text-primary-on-dark, white);
}

.mdc-card-mdc-card__actions .mdc-card-mdc-card__action {
  margin: 0 8px 0 0;
}

[dir="rtl"] .mdc-card-mdc-card__actions .mdc-card-mdc-card__action,
.mdc-card-mdc-card__actions .mdc-card-mdc-card__action[dir="rtl"] {
  margin: 0 0 0 8px;
}

.mdc-card-mdc-card__actions .mdc-card-mdc-card__action:last-child {
  margin-left: 0;
  margin-right: 0;
}

[dir="rtl"] .mdc-card-mdc-card__actions .mdc-card-mdc-card__action:last-child,
.mdc-card-mdc-card__actions .mdc-card-mdc-card__action:last-child[dir="rtl"] {
  margin-left: 0;
  margin-right: 0;
}

.mdc-card-mdc-card__actions--vertical {
  flex-flow: column;
  align-items: flex-start;
}

.mdc-card-mdc-card__actions--vertical .mdc-card-mdc-card__action {
  margin: 0 0 4px;
}

.mdc-card-mdc-card__actions--vertical .mdc-card-mdc-card__action:last-child {
  margin-bottom: 0;
}

.mdc-card-mdc-card__media {
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  box-sizing: border-box;
  padding: 16px;
}

.mdc-card-mdc-card__media-item {
  display: inline-block;
  width: auto;
  height: 80px;
  margin: 16px 0 0;
  padding: 0;
}

.mdc-card-mdc-card__media-item--1dot5x {
  width: auto;
  height: 120px;
}

.mdc-card-mdc-card__media-item--2x {
  width: auto;
  height: 160px;
}

.mdc-card-mdc-card__media-item--3x {
  width: auto;
  height: 240px;
}

.mdc-card-mdc-card__title {
  font-family: Roboto, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-size: 0.875rem;
  font-weight: 500;
  letter-spacing: 0.04em;
  line-height: 1.5rem;
  text-decoration: inherit;
  text-transform: inherit;
  /* @alternate */
  color: rgba(0, 0, 0, 0.87);
  color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87));
  margin: -.063rem 0;
}

.mdc-card-mdc-card--theme-dark .mdc-card-mdc-card__title,
.mdc-card-mdc-theme--dark .mdc-card-mdc-card__title {
  /* @alternate */
  color: white;
  color: var(--mdc-theme-text-primary-on-dark, white);
}

.mdc-card-mdc-card__title--large {
  font-family: Roboto, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-size: 1.5rem;
  font-weight: 400;
  letter-spacing: normal;
  line-height: 2rem;
  text-decoration: inherit;
  text-transform: inherit;
  margin: 0;
}

.mdc-card-mdc-card__subtitle {
  font-family: Roboto, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-size: 0.875rem;
  font-weight: 400;
  letter-spacing: 0.04em;
  line-height: 1.25rem;
  text-decoration: inherit;
  text-transform: inherit;
  /* @alternate */
  color: rgba(0, 0, 0, 0.87);
  color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87));
  margin: -.063rem 0;
}

.mdc-card-mdc-card--theme-dark .mdc-card-mdc-card__subtitle,
.mdc-card-mdc-theme--dark .mdc-card-mdc-card__subtitle {
  /* @alternate */
  color: white;
  color: var(--mdc-theme-text-primary-on-dark, white);
}

.mdc-card-mdc-card__horizontal-block {
  padding-left: 0;
  padding-right: 16px;
  display: flex;
  flex-direction: row;
  align-items: flex-start;
  justify-content: space-between;
  box-sizing: border-box;
}

[dir="rtl"] .mdc-card-mdc-card__horizontal-block,
.mdc-card-mdc-card__horizontal-block[dir="rtl"] {
  padding-left: 16px;
  padding-right: 0;
}

.mdc-card-mdc-card__horizontal-block .mdc-card-mdc-card__actions--vertical {
  margin: 16px;
}

.mdc-card-mdc-card__horizontal-block .mdc-card-mdc-card__media-item {
  margin-left: 16px;
  margin-right: 0;
}

[dir="rtl"] .mdc-card-mdc-card__horizontal-block .mdc-card-mdc-card__media-item,
.mdc-card-mdc-card__horizontal-block .mdc-card-mdc-card__media-item[dir="rtl"] {
  margin-left: 0;
  margin-right: 16px;
}

.mdc-card-mdc-card__horizontal-block .mdc-card-mdc-card__media-item--3x {
  margin-bottom: 16px;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */@keyframes mdc-linear-progress-primary-indeterminate-translate {
  0% {
    transform: translateX(0);
  }

  20% {
    animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);
    transform: translateX(0);
  }

  59.15% {
    animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);
    transform: translateX(83.67142%);
  }

  100% {
    transform: translateX(200.61106%);
  }
}

@keyframes mdc-linear-progress-primary-indeterminate-scale {
  0% {
    transform: scaleX(0.08);
  }

  36.65% {
    animation-timing-function: cubic-bezier(0.33473, 0.12482, 0.78584, 1);
    transform: scaleX(0.08);
  }

  69.15% {
    animation-timing-function: cubic-bezier(0.06, 0.11, 0.6, 1);
    transform: scaleX(0.66148);
  }

  100% {
    transform: scaleX(0.08);
  }
}

@keyframes mdc-linear-progress-secondary-indeterminate-translate {
  0% {
    animation-timing-function: cubic-bezier(0.15, 0, 0.51506, 0.40969);
    transform: translateX(0);
  }

  25% {
    animation-timing-function: cubic-bezier(0.31033, 0.28406, 0.8, 0.73371);
    transform: translateX(37.65191%);
  }

  48.35% {
    animation-timing-function: cubic-bezier(0.4, 0.62704, 0.6, 0.90203);
    transform: translateX(84.38617%);
  }

  100% {
    transform: translateX(160.27778%);
  }
}

@keyframes mdc-linear-progress-secondary-indeterminate-scale {
  0% {
    animation-timing-function: cubic-bezier(0.20503, 0.05705, 0.57661, 0.45397);
    transform: scaleX(0.08);
  }

  19.15% {
    animation-timing-function: cubic-bezier(0.15231, 0.19643, 0.64837, 1.00432);
    transform: scaleX(0.4571);
  }

  44.15% {
    animation-timing-function: cubic-bezier(0.25776, -0.00316, 0.21176, 1.38179);
    transform: scaleX(0.72796);
  }

  100% {
    transform: scaleX(0.08);
  }
}

@keyframes mdc-linear-progress-buffering {
  to {
    transform: translateX(-10px);
  }
}

@keyframes mdc-linear-progress-primary-indeterminate-translate-reverse {
  0% {
    transform: translateX(0);
  }

  20% {
    animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);
    transform: translateX(0);
  }

  59.15% {
    animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);
    transform: translateX(-83.67142%);
  }

  100% {
    transform: translateX(-200.61106%);
  }
}

@keyframes mdc-linear-progress-secondary-indeterminate-translate-reverse {
  0% {
    animation-timing-function: cubic-bezier(0.15, 0, 0.51506, 0.40969);
    transform: translateX(0);
  }

  25% {
    animation-timing-function: cubic-bezier(0.31033, 0.28406, 0.8, 0.73371);
    transform: translateX(-37.65191%);
  }

  48.35% {
    animation-timing-function: cubic-bezier(0.4, 0.62704, 0.6, 0.90203);
    transform: translateX(-84.38617%);
  }

  100% {
    transform: translateX(-160.27778%);
  }
}

@keyframes mdc-linear-progress-buffering-reverse {
  to {
    transform: translateX(10px);
  }
}

.mdc-linear-progress-mdc-linear-progress {
  position: relative;
  width: 100%;
  height: 4px;
  transform: translateZ(0);
  transition: opacity 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
  overflow: hidden;
}

.mdc-linear-progress-mdc-linear-progress__bar {
  position: absolute;
  width: 100%;
  height: 100%;
  animation: none;
  transform-origin: top left;
  transition: transform 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
}

.mdc-linear-progress-mdc-linear-progress__bar-inner {
  /* @alternate */
  background-color: #3f51b5;
  background-color: var(--mdc-theme-primary, #3f51b5);
  display: inline-block;
  position: absolute;
  width: 100%;
  height: 100%;
  animation: none;
}

.mdc-linear-progress-mdc-linear-progress--accent .mdc-linear-progress-mdc-linear-progress__bar-inner {
  /* @alternate */
  background-color: #ff4081;
  background-color: var(--mdc-theme-secondary, #ff4081);
}

.mdc-linear-progress-mdc-linear-progress__buffering-dots {
  position: absolute;
  width: 100%;
  height: 100%;
  animation: mdc-linear-progress-buffering 250ms infinite linear;
  background-image: url("data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='%23e6e6e6'/%3E%3C/svg%3E");
  background-repeat: repeat-x;
  background-size: 10px 4px;
}

.mdc-linear-progress-mdc-linear-progress__buffer {
  position: absolute;
  width: 100%;
  height: 100%;
  transform-origin: top left;
  transition: transform 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
  background-color: #e6e6e6;
}

.mdc-linear-progress-mdc-linear-progress__secondary-bar {
  visibility: hidden;
}

.mdc-linear-progress-mdc-linear-progress--indeterminate .mdc-linear-progress-mdc-linear-progress__bar {
  transition: none;
}

.mdc-linear-progress-mdc-linear-progress--indeterminate .mdc-linear-progress-mdc-linear-progress__primary-bar {
  left: -145.166611%;
  animation: mdc-linear-progress-primary-indeterminate-translate 2s infinite linear;
}

.mdc-linear-progress-mdc-linear-progress--indeterminate .mdc-linear-progress-mdc-linear-progress__primary-bar > .mdc-linear-progress-mdc-linear-progress__bar-inner {
  animation: mdc-linear-progress-primary-indeterminate-scale 2s infinite linear;
}

.mdc-linear-progress-mdc-linear-progress--indeterminate .mdc-linear-progress-mdc-linear-progress__secondary-bar {
  left: -54.888891%;
  animation: mdc-linear-progress-secondary-indeterminate-translate 2s infinite linear;
  visibility: visible;
}

.mdc-linear-progress-mdc-linear-progress--indeterminate .mdc-linear-progress-mdc-linear-progress__secondary-bar > .mdc-linear-progress-mdc-linear-progress__bar-inner {
  animation: mdc-linear-progress-secondary-indeterminate-scale 2s infinite linear;
}

.mdc-linear-progress-mdc-linear-progress--reversed .mdc-linear-progress-mdc-linear-progress__bar,
.mdc-linear-progress-mdc-linear-progress--reversed .mdc-linear-progress-mdc-linear-progress__buffer {
  right: 0;
  transform-origin: center right;
}

.mdc-linear-progress-mdc-linear-progress--reversed .mdc-linear-progress-mdc-linear-progress__primary-bar {
  animation-name: mdc-linear-progress-primary-indeterminate-translate-reverse;
}

.mdc-linear-progress-mdc-linear-progress--reversed .mdc-linear-progress-mdc-linear-progress__secondary-bar {
  animation-name: mdc-linear-progress-secondary-indeterminate-translate-reverse;
}

.mdc-linear-progress-mdc-linear-progress--reversed .mdc-linear-progress-mdc-linear-progress__buffering-dots {
  animation: mdc-linear-progress-buffering-reverse 250ms infinite linear;
}

.mdc-linear-progress-mdc-linear-progress--closed {
  opacity: 0;
}

.mdc-linear-progress-mdc-linear-progress--indeterminate.mdc-linear-progress-mdc-linear-progress--reversed .mdc-linear-progress-mdc-linear-progress__primary-bar {
  right: -145.166611%;
  left: auto;
}

.mdc-linear-progress-mdc-linear-progress--indeterminate.mdc-linear-progress-mdc-linear-progress--reversed .mdc-linear-progress-mdc-linear-progress__secondary-bar {
  right: -54.888891%;
  left: auto;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64, *//* TODO(sgomes): Figure out what to do about desktop font sizes. */

/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */

/* TODO(sgomes): Figure out what to do about desktop font sizes. */

/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */

.mdc-typography-mdc-typography {
  font-family: Roboto, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.mdc-typography-mdc-typography--display4 {
  font-family: Roboto, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-size: 7rem;
  font-weight: 300;
  letter-spacing: -0.04em;
  line-height: 7rem;
  text-decoration: inherit;
  text-transform: inherit;
}

.mdc-typography-mdc-typography--adjust-margin.mdc-typography-mdc-typography--display4 {
  margin: -1rem 0 3.5rem -0.085em;
}

.mdc-typography-mdc-typography--display3 {
  font-family: Roboto, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-size: 3.5rem;
  font-weight: 400;
  letter-spacing: -0.02em;
  line-height: 3.5rem;
  text-decoration: inherit;
  text-transform: inherit;
}

.mdc-typography-mdc-typography--adjust-margin.mdc-typography-mdc-typography--display3 {
  margin: -8px 0 64px -0.07em;
}

.mdc-typography-mdc-typography--display2 {
  font-family: Roboto, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-size: 2.813rem;
  font-weight: 400;
  letter-spacing: normal;
  line-height: 3rem;
  text-decoration: inherit;
  text-transform: inherit;
}

.mdc-typography-mdc-typography--adjust-margin.mdc-typography-mdc-typography--display2 {
  margin: -0.5rem 0 4rem -0.07em;
}

.mdc-typography-mdc-typography--display1 {
  font-family: Roboto, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-size: 2.125rem;
  font-weight: 400;
  letter-spacing: normal;
  line-height: 2.5rem;
  text-decoration: inherit;
  text-transform: inherit;
}

.mdc-typography-mdc-typography--adjust-margin.mdc-typography-mdc-typography--display1 {
  margin: -0.5rem 0 4rem -0.07em;
}

.mdc-typography-mdc-typography--headline {
  font-family: Roboto, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-size: 1.5rem;
  font-weight: 400;
  letter-spacing: normal;
  line-height: 2rem;
  text-decoration: inherit;
  text-transform: inherit;
}

.mdc-typography-mdc-typography--adjust-margin.mdc-typography-mdc-typography--headline {
  margin: -0.5rem 0 1rem -0.06em;
}

.mdc-typography-mdc-typography--title {
  font-family: Roboto, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-size: 1.25rem;
  font-weight: 500;
  letter-spacing: 0.02em;
  line-height: 2rem;
  text-decoration: inherit;
  text-transform: inherit;
}

.mdc-typography-mdc-typography--adjust-margin.mdc-typography-mdc-typography--title {
  margin: -0.5rem 0 1rem -0.05em;
}

.mdc-typography-mdc-typography--subheading2 {
  font-family: Roboto, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-size: 1rem;
  font-weight: 400;
  letter-spacing: 0.04em;
  line-height: 1.75rem;
  text-decoration: inherit;
  text-transform: inherit;
}

.mdc-typography-mdc-typography--adjust-margin.mdc-typography-mdc-typography--subheading2 {
  margin: -0.5rem 0 1rem -0.06em;
}

.mdc-typography-mdc-typography--subheading1 {
  font-family: Roboto, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-size: 0.938rem;
  font-weight: 400;
  letter-spacing: 0.04em;
  line-height: 1.5rem;
  text-decoration: inherit;
  text-transform: inherit;
}

.mdc-typography-mdc-typography--adjust-margin.mdc-typography-mdc-typography--subheading1 {
  margin: -0.313rem 0 0.813rem -0.06em;
}

.mdc-typography-mdc-typography--body2 {
  font-family: Roboto, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-size: 0.875rem;
  font-weight: 500;
  letter-spacing: 0.04em;
  line-height: 1.5rem;
  text-decoration: inherit;
  text-transform: inherit;
}

.mdc-typography-mdc-typography--adjust-margin.mdc-typography-mdc-typography--body2 {
  margin: -0.25rem 0 0.75rem 0;
}

.mdc-typography-mdc-typography--body1 {
  font-family: Roboto, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-size: 0.875rem;
  font-weight: 400;
  letter-spacing: 0.04em;
  line-height: 1.25rem;
  text-decoration: inherit;
  text-transform: inherit;
}

.mdc-typography-mdc-typography--adjust-margin.mdc-typography-mdc-typography--body1 {
  margin: -0.25rem 0 0.75rem 0;
}

.mdc-typography-mdc-typography--caption {
  font-family: Roboto, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-size: 0.75rem;
  font-weight: 400;
  letter-spacing: 0.08em;
  line-height: 1.25rem;
  text-decoration: inherit;
  text-transform: inherit;
}

.mdc-typography-mdc-typography--adjust-margin.mdc-typography-mdc-typography--caption {
  margin: -0.5rem 0 1rem -0.04em;
}

.mdc-typography-mdc-typography--button {
  font-family: Roboto, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-size: 0.875rem;
  font-weight: 500;
  letter-spacing: 0.04em;
  line-height: 2.25rem;
  text-decoration: none;
  text-transform: uppercase;
}

.mdc-typography-mdc-typography--adjust-margin.mdc-typography-mdc-typography--button {
  margin: inherit;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */@keyframes mdc-list-mdc-ripple-fg-radius-in {
  from {
    animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);
  }

  to {
    transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
  }
}

@keyframes mdc-list-mdc-ripple-fg-opacity-in {
  from {
    animation-timing-function: linear;
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes mdc-list-mdc-ripple-fg-opacity-out {
  from {
    animation-timing-function: linear;
    opacity: 1;
  }

  to {
    opacity: 0;
  }
}

.mdc-list-mdc-ripple-surface--test-edge-var-bug {
  --mdc-ripple-surface-test-edge-var: 1px solid #000;
  visibility: hidden;
}

.mdc-list-mdc-ripple-surface--test-edge-var-bug::before {
  border: var(--mdc-ripple-surface-test-edge-var);
}

/**
 * Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.
 *
 * Usage Example:
 * ```scss
 * .mdc-foo {
 *   position: absolute;
 *   left: 0;
 *
 *   @include mdc-rtl {
 *     left: auto;
 *     right: 0;
 *   }
 *
 *   &__bar {
 *     margin-left: 4px;
 *     @include mdc-rtl(".mdc-foo") {
 *       margin-left: auto;
 *       margin-right: 4px;
 *     }
 *   }
 * }
 *
 * .mdc-foo--mod {
 *   padding-left: 4px;
 *
 *   @include mdc-rtl {
 *     padding-left: auto;
 *     padding-right: 4px;
 *   }
 * }
 * ```
 *
 * Note that this works by checking for [dir="rtl"] on an ancestor element. While this will work
 * in most cases, it will in some cases lead to false negatives, e.g.
 *
 * ```html
 * <html dir="rtl">
 *   <!-- ... -->
 *   <div dir="ltr">
 *     <div class="mdc-foo">Styled incorrectly as RTL!</div>
 *   </div>
 * </html>
 * ```
 *
 * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.
 */

/**
 * Takes a base box-model property - e.g. margin / border / padding - along with a default
 * direction and value, and emits rules which apply the value to the
 * "<base-property>-<default-direction>" property by default, but flips the direction
 * when within an RTL context.
 *
 * For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-box(margin, left, 8px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-left: 8px;
 *
 *   @include mdc-rtl {
 *     margin-right: 8px;
 *     margin-left: 0;
 *   }
 * }
 * ```
 * whereas:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-box(margin, right, 8px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-right: 8px;
 *
 *   @include mdc-rtl {
 *     margin-right: 0;
 *     margin-left: 8px;
 *   }
 * }
 * ```
 *
 * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,
 * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, ".mdc-component")`.
 *
 * Note that this function will always zero out the original value in an RTL context. If you're
 * trying to flip the values, use mdc-rtl-reflexive-property().
 */

/**
 * Takes a base property and emits rules that assign <base-property>-left to <left-value> and
 * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.
 * For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-property(margin, auto, 12px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-left: auto;
 *   margin-right: 12px;
 *
 *   @include mdc-rtl {
 *     margin-left: 12px;
 *     margin-right: auto;
 *   }
 * }
 * ```
 *
 * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.
 */

/**
 * Takes an argument specifying a horizontal position property (either "left" or "right") as well
 * as a value, and applies that value to the specified position in a LTR context, and flips it in a
 * RTL context. For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-position(left, 0);
 *   position: absolute;
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 *  .mdc-foo {
 *    position: absolute;
 *    left: 0;
 *    right: initial;
 *
 *    @include mdc-rtl {
 *      right: 0;
 *      left: initial;
 *    }
 *  }
 * ```
 * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.
 */

/* TODO(sgomes): Figure out what to do about desktop font sizes. */

/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */

/* TODO(sgomes): Figure out what to do about desktop font sizes. */

/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */

.mdc-list-mdc-list {
  font-family: Roboto, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-size: 1rem;
  font-weight: 400;
  letter-spacing: 0.04em;
  line-height: 1.75rem;
  text-decoration: inherit;
  text-transform: inherit;
  /* @alternate */
  color: rgba(0, 0, 0, 0.87);
  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));
  margin: 0;
  padding: 8px 16px 0;
  line-height: 1.5rem;
  list-style-type: none;
}

.mdc-list-mdc-list--theme-dark,
.mdc-list-mdc-theme--dark .mdc-list-mdc-list {
  /* @alternate */
  color: white;
  color: var(--mdc-theme-text-primary-on-dark, white);
}

.mdc-list-mdc-list--dense {
  padding-top: 4px;
  font-size: .812rem;
}

.mdc-list-mdc-list-item {
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: flex-start;
  height: 48px;
}

.mdc-list-mdc-list-item__start-detail {
  width: 24px;
  height: 24px;
  margin-left: 0;
  margin-right: 32px;
}

[dir="rtl"] .mdc-list-mdc-list-item .mdc-list-mdc-list-item__start-detail,
.mdc-list-mdc-list-item[dir="rtl"] .mdc-list-mdc-list-item__start-detail {
  margin-left: 32px;
  margin-right: 0;
}

.mdc-list-mdc-list-item__end-detail {
  width: 24px;
  height: 24px;
  margin-left: auto;
  margin-right: 0;
}

[dir="rtl"] .mdc-list-mdc-list-item .mdc-list-mdc-list-item__end-detail,
.mdc-list-mdc-list-item[dir="rtl"] .mdc-list-mdc-list-item__end-detail {
  margin-left: 0;
  margin-right: auto;
}

.mdc-list-mdc-list-item__text {
  display: inline-flex;
  flex-direction: column;
}

.mdc-list-mdc-list-item__text__secondary {
  font-family: Roboto, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-size: 0.875rem;
  font-weight: 400;
  letter-spacing: 0.04em;
  line-height: 1.25rem;
  text-decoration: inherit;
  text-transform: inherit;
  /* @alternate */
  color: rgba(0, 0, 0, 0.54);
  color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54));
}

.mdc-list-mdc-list-item__text__secondary--theme-dark,
.mdc-list-mdc-theme--dark .mdc-list-mdc-list-item__text__secondary {
  /* @alternate */
  color: rgba(255, 255, 255, 0.7);
  color: var(--mdc-theme-text-secondary-on-dark, rgba(255, 255, 255, 0.7));
}

.mdc-list-mdc-list--dense .mdc-list-mdc-list-item__text__secondary {
  font-size: inherit;
}

.mdc-list-mdc-list--dense .mdc-list-mdc-list-item {
  height: 40px;
}

.mdc-list-mdc-list--dense .mdc-list-mdc-list-item__start-detail {
  width: 20px;
  height: 20px;
  margin-left: 0;
  margin-right: 36px;
}

[dir="rtl"] .mdc-list-mdc-list-item .mdc-list-mdc-list--dense .mdc-list-mdc-list-item__start-detail,
.mdc-list-mdc-list-item[dir="rtl"] .mdc-list-mdc-list--dense .mdc-list-mdc-list-item__start-detail {
  margin-left: 36px;
  margin-right: 0;
}

.mdc-list-mdc-list--dense .mdc-list-mdc-list-item__end-detail {
  width: 20px;
  height: 20px;
}

.mdc-list-mdc-list--avatar-list .mdc-list-mdc-list-item {
  height: 56px;
}

.mdc-list-mdc-list--avatar-list .mdc-list-mdc-list-item__start-detail {
  width: 40px;
  height: 40px;
  margin-left: 0;
  margin-right: 16px;
  border-radius: 50%;
}

[dir="rtl"] .mdc-list-mdc-list-item .mdc-list-mdc-list--avatar-list .mdc-list-mdc-list-item__start-detail,
.mdc-list-mdc-list-item[dir="rtl"] .mdc-list-mdc-list--avatar-list .mdc-list-mdc-list-item__start-detail {
  margin-left: 16px;
  margin-right: 0;
}

.mdc-list-mdc-list-item .mdc-list-mdc-list--avatar-list.mdc-list-mdc-list--dense .mdc-list-mdc-list__item {
  height: 48px;
}

.mdc-list-mdc-list-item .mdc-list-mdc-list--avatar-list.mdc-list-mdc-list--dense .mdc-list-mdc-list__item__start-detail {
  width: 36px;
  height: 36px;
  margin-left: 0;
  margin-right: 20px;
}

[dir="rtl"] .mdc-list-mdc-list-item .mdc-list-mdc-list-item .mdc-list-mdc-list--avatar-list.mdc-list-mdc-list--dense .mdc-list-mdc-list__item__start-detail,
.mdc-list-mdc-list-item[dir="rtl"] .mdc-list-mdc-list-item .mdc-list-mdc-list--avatar-list.mdc-list-mdc-list--dense .mdc-list-mdc-list__item__start-detail {
  margin-left: 20px;
  margin-right: 0;
}

.mdc-list-mdc-list--two-line .mdc-list-mdc-list-item {
  height: 72px;
}

.mdc-list-mdc-list--two-line.mdc-list-mdc-list--dense .mdc-list-mdc-list-item {
  height: 60px;
}

a.mdc-list-mdc-list-item {
  color: inherit;
  text-decoration: none;
}

.mdc-list-mdc-list-item.mdc-list-mdc-ripple-upgraded {
  --mdc-ripple-fg-size: 0;
  --mdc-ripple-left: 0;
  --mdc-ripple-top: 0;
  --mdc-ripple-fg-scale: 1;
  --mdc-ripple-fg-translate-end: 0;
  --mdc-ripple-fg-translate-start: 0;
  will-change: transform, opacity;
  -webkit-tap-highlight-color: transparent;
  left: -16px;
  right: initial;
  position: relative;
  width: 100%;
  padding: 0 16px;
  overflow: hidden;
}

.mdc-list-mdc-list-item.mdc-list-mdc-ripple-upgraded::before,
.mdc-list-mdc-list-item.mdc-list-mdc-ripple-upgraded::after {
  position: absolute;
  transition: opacity 250ms linear;
  border-radius: 50%;
  pointer-events: none;
  content: "";
}

.mdc-list-mdc-list-item.mdc-list-mdc-ripple-upgraded::before,
.mdc-list-mdc-list-item.mdc-list-mdc-ripple-upgraded::after {
  background-color: rgba(0, 0, 0, 0.06);
  opacity: 0;
}

.mdc-list-mdc-list-item.mdc-list-mdc-ripple-upgraded:not(.mdc-list-mdc-ripple-upgraded):hover::before,
.mdc-list-mdc-list-item.mdc-list-mdc-ripple-upgraded:not(.mdc-list-mdc-ripple-upgraded):focus::before,
.mdc-list-mdc-list-item.mdc-list-mdc-ripple-upgraded:not(.mdc-list-mdc-ripple-upgraded):active::after {
  transition-duration: 85ms;
  opacity: .6;
}

.mdc-list-mdc-list-item.mdc-list-mdc-ripple-upgraded.mdc-list-mdc-ripple-upgraded--background-focused::before {
  opacity: .99999;
}

.mdc-list-mdc-list-item.mdc-list-mdc-ripple-upgraded.mdc-list-mdc-ripple-upgraded--background-active-fill::before {
  transition-duration: 120ms;
  opacity: 1;
}

.mdc-list-mdc-list-item.mdc-list-mdc-ripple-upgraded.mdc-list-mdc-ripple-upgraded::after {
  opacity: 0;
}

.mdc-list-mdc-list-item.mdc-list-mdc-ripple-upgraded.mdc-list-mdc-ripple-upgraded--foreground-activation::after {
  animation: 300ms :local(mdc-ripple-fg-radius-in) forwards, 83ms :local(mdc-ripple-fg-opacity-in) forwards;
}

.mdc-list-mdc-list-item.mdc-list-mdc-ripple-upgraded.mdc-list-mdc-ripple-upgraded--foreground-deactivation::after {
  animation: 83ms :local(mdc-ripple-fg-opacity-out);
  transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
}

.mdc-list-mdc-list-item.mdc-list-mdc-ripple-upgraded::before,
.mdc-list-mdc-list-item.mdc-list-mdc-ripple-upgraded::after {
  top: calc(50% - 100%);
  left: calc(50% - 100%);
  width: 200%;
  height: 200%;
}

.mdc-list-mdc-list-item.mdc-list-mdc-ripple-upgraded.mdc-list-mdc-ripple-upgraded::before {
  top: calc(50% - 100%);
  left: calc(50% - 100%);
  width: 200%;
  height: 200%;
  transform: scale(var(--mdc-ripple-fg-scale, 0));
}

.mdc-list-mdc-list-item.mdc-list-mdc-ripple-upgraded.mdc-list-mdc-ripple-upgraded--unbounded::before {
  top: var(--mdc-ripple-top, calc(50% - 50%));
  left: var(--mdc-ripple-left, calc(50% - 50%));
  width: var(--mdc-ripple-fg-size, 100%);
  height: var(--mdc-ripple-fg-size, 100%);
  transform: scale(var(--mdc-ripple-fg-scale, 0));
}

.mdc-list-mdc-list-item.mdc-list-mdc-ripple-upgraded.mdc-list-mdc-ripple-upgraded::after {
  top: 0;
  left: 0;
  width: var(--mdc-ripple-fg-size, 100%);
  height: var(--mdc-ripple-fg-size, 100%);
  transform: scale(0);
  transform-origin: center center;
}

.mdc-list-mdc-list-item.mdc-list-mdc-ripple-upgraded.mdc-list-mdc-ripple-upgraded--unbounded::after {
  top: var(--mdc-ripple-top, 0);
  left: var(--mdc-ripple-left, 0);
}

[dir="rtl"] .mdc-list-mdc-list-item.mdc-list-mdc-ripple-upgraded,
.mdc-list-mdc-list-item.mdc-list-mdc-ripple-upgraded[dir="rtl"] {
  left: initial;
  right: -16px;
}

.mdc-list-mdc-list-item.mdc-list-mdc-ripple-upgraded:focus {
  outline: none;
}

.mdc-list-mdc-list--theme-dark .mdc-list-mdc-list-item.mdc-list-mdc-ripple-upgraded::before,
.mdc-list-mdc-list--theme-dark .mdc-list-mdc-list-item.mdc-list-mdc-ripple-upgraded::after,
.mdc-list-mdc-theme--dark .mdc-list-mdc-list-item.mdc-list-mdc-ripple-upgraded::before,
.mdc-list-mdc-theme--dark .mdc-list-mdc-list-item.mdc-list-mdc-ripple-upgraded::after {
  background-color: rgba(255, 255, 255, 0.12);
  opacity: 0;
}

.mdc-list-mdc-list--theme-dark .mdc-list-mdc-list-item.mdc-list-mdc-ripple-upgraded:not(.mdc-list-mdc-ripple-upgraded):hover::before,
.mdc-list-mdc-list--theme-dark .mdc-list-mdc-list-item.mdc-list-mdc-ripple-upgraded:not(.mdc-list-mdc-ripple-upgraded):focus::before,
.mdc-list-mdc-list--theme-dark .mdc-list-mdc-list-item.mdc-list-mdc-ripple-upgraded:not(.mdc-list-mdc-ripple-upgraded):active::after,
.mdc-list-mdc-theme--dark .mdc-list-mdc-list-item.mdc-list-mdc-ripple-upgraded:not(.mdc-list-mdc-ripple-upgraded):hover::before,
.mdc-list-mdc-theme--dark .mdc-list-mdc-list-item.mdc-list-mdc-ripple-upgraded:not(.mdc-list-mdc-ripple-upgraded):focus::before,
.mdc-list-mdc-theme--dark .mdc-list-mdc-list-item.mdc-list-mdc-ripple-upgraded:not(.mdc-list-mdc-ripple-upgraded):active::after {
  transition-duration: 85ms;
  opacity: .6;
}

.mdc-list-mdc-list--theme-dark .mdc-list-mdc-list-item.mdc-list-mdc-ripple-upgraded.mdc-list-mdc-ripple-upgraded--background-focused::before,
.mdc-list-mdc-theme--dark .mdc-list-mdc-list-item.mdc-list-mdc-ripple-upgraded.mdc-list-mdc-ripple-upgraded--background-focused::before {
  opacity: .99999;
}

.mdc-list-mdc-list--theme-dark .mdc-list-mdc-list-item.mdc-list-mdc-ripple-upgraded.mdc-list-mdc-ripple-upgraded--background-active-fill::before,
.mdc-list-mdc-theme--dark .mdc-list-mdc-list-item.mdc-list-mdc-ripple-upgraded.mdc-list-mdc-ripple-upgraded--background-active-fill::before {
  transition-duration: 120ms;
  opacity: 1;
}

.mdc-list-mdc-list--theme-dark .mdc-list-mdc-list-item.mdc-list-mdc-ripple-upgraded.mdc-list-mdc-ripple-upgraded::after,
.mdc-list-mdc-theme--dark .mdc-list-mdc-list-item.mdc-list-mdc-ripple-upgraded.mdc-list-mdc-ripple-upgraded::after {
  opacity: 0;
}

.mdc-list-mdc-list--theme-dark .mdc-list-mdc-list-item.mdc-list-mdc-ripple-upgraded.mdc-list-mdc-ripple-upgraded--foreground-activation::after,
.mdc-list-mdc-theme--dark .mdc-list-mdc-list-item.mdc-list-mdc-ripple-upgraded.mdc-list-mdc-ripple-upgraded--foreground-activation::after {
  animation: 300ms :local(mdc-ripple-fg-radius-in) forwards, 83ms :local(mdc-ripple-fg-opacity-in) forwards;
}

.mdc-list-mdc-list--theme-dark .mdc-list-mdc-list-item.mdc-list-mdc-ripple-upgraded.mdc-list-mdc-ripple-upgraded--foreground-deactivation::after,
.mdc-list-mdc-theme--dark .mdc-list-mdc-list-item.mdc-list-mdc-ripple-upgraded.mdc-list-mdc-ripple-upgraded--foreground-deactivation::after {
  animation: 83ms :local(mdc-ripple-fg-opacity-out);
  transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
}

.mdc-list-mdc-list-divider {
  height: 0;
  margin: 0;
  border: none;
  border-bottom: 1px solid rgba(0, 0, 0, 0.12);
}

.mdc-list-mdc-list--theme-dark .mdc-list-mdc-list-divider,
.mdc-list-mdc-theme--dark .mdc-list-mdc-list-divider {
  border-bottom-color: rgba(255, 255, 255, 0.2);
}

.mdc-list-mdc-list-divider--inset {
  margin-left: 56px;
  margin-right: 0;
  width: calc(100% - 56px);
}

[dir="rtl"] .mdc-list-mdc-list-group .mdc-list-mdc-list-divider--inset,
.mdc-list-mdc-list-group[dir="rtl"] .mdc-list-mdc-list-divider--inset {
  margin-left: 0;
  margin-right: 56px;
}

.mdc-list-mdc-list-group {
  padding: 0 16px;
}

.mdc-list-mdc-list-group__subheader {
  font-family: Roboto, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-size: 0.875rem;
  font-weight: 500;
  letter-spacing: 0.04em;
  line-height: 1.5rem;
  text-decoration: inherit;
  text-transform: inherit;
  /* @alternate */
  color: rgba(0, 0, 0, 0.87);
  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));
  margin: 0.75rem 0;
}

.mdc-list-mdc-list-group__subheader--theme-dark,
.mdc-list-mdc-theme--dark .mdc-list-mdc-list-group__subheader {
  /* @alternate */
  color: white;
  color: var(--mdc-theme-text-primary-on-dark, white);
}

.mdc-list-mdc-list-group .mdc-list-mdc-list {
  padding: 0;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64, *//**
 * The css property used for elevation. In most cases this should not be changed. It is exposed
 * as a variable for abstraction / easy use when needing to reference the property directly, for
 * example in a `will-change` rule.
 */

/**
 * The default duration value for elevation transitions.
 */

/**
 * The default easing value for elevation transitions.
 */

/**
 * Applies the correct css rules to an element to give it the elevation specified by $z-value.
 * The $z-value must be between 0 and 24.
 */

/**
 * Returns a string that can be used as the value for a `transition` property for elevation.
 * Calling this function directly is useful in situations where a component needs to transition
 * more than one property.
 *
 * ```scss
 * .foo {
 *   transition: mdc-elevation-transition-rule(), opacity 100ms ease;
 *   will-change: $mdc-elevation-property, opacity;
 * }
 * ```
 */

/**
 * Applies the correct css rules needed to have an element transition between elevations.
 * This mixin should be applied to elements whose elevation values will change depending on their
 * context (e.g. when active or disabled).
 */

.mdc-elevation-mdc-elevation--z0 {
  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);
}

.mdc-elevation-mdc-elevation--z1 {
  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);
}

.mdc-elevation-mdc-elevation--z2 {
  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);
}

.mdc-elevation-mdc-elevation--z3 {
  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);
}

.mdc-elevation-mdc-elevation--z4 {
  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);
}

.mdc-elevation-mdc-elevation--z5 {
  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12);
}

.mdc-elevation-mdc-elevation--z6 {
  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);
}

.mdc-elevation-mdc-elevation--z7 {
  box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12);
}

.mdc-elevation-mdc-elevation--z8 {
  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);
}

.mdc-elevation-mdc-elevation--z9 {
  box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12);
}

.mdc-elevation-mdc-elevation--z10 {
  box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12);
}

.mdc-elevation-mdc-elevation--z11 {
  box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12);
}

.mdc-elevation-mdc-elevation--z12 {
  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);
}

.mdc-elevation-mdc-elevation--z13 {
  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12);
}

.mdc-elevation-mdc-elevation--z14 {
  box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12);
}

.mdc-elevation-mdc-elevation--z15 {
  box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12);
}

.mdc-elevation-mdc-elevation--z16 {
  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);
}

.mdc-elevation-mdc-elevation--z17 {
  box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12);
}

.mdc-elevation-mdc-elevation--z18 {
  box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12);
}

.mdc-elevation-mdc-elevation--z19 {
  box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12);
}

.mdc-elevation-mdc-elevation--z20 {
  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12);
}

.mdc-elevation-mdc-elevation--z21 {
  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12);
}

.mdc-elevation-mdc-elevation--z22 {
  box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12);
}

.mdc-elevation-mdc-elevation--z23 {
  box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12);
}

.mdc-elevation-mdc-elevation--z24 {
  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);
}

.mdc-elevation-mdc-elevation-transition {
  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);
  will-change: box-shadow;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL21hcmMvUHJvamVjdHMvZnJlZS1jb2RlLWNhbXAtcHJvamVjdHMvbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC9lbGV2YXRpb24vbWRjLWVsZXZhdGlvbi5zY3NzIiwiL2hvbWUvbWFyYy9Qcm9qZWN0cy9mcmVlLWNvZGUtY2FtcC1wcm9qZWN0cy9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL2VsZXZhdGlvbi9fbWl4aW5zLnNjc3MiLCIvaG9tZS9tYXJjL1Byb2plY3RzL2ZyZWUtY29kZS1jYW1wLXByb2plY3RzL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwvZWxldmF0aW9uL192YXJpYWJsZXMuc2NzcyIsIi9ob21lL21hcmMvUHJvamVjdHMvZnJlZS1jb2RlLWNhbXAtcHJvamVjdHMvbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC9hbmltYXRpb24vX3ZhcmlhYmxlcy5zY3NzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vXG4vLyBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4vL1xuXG5AaW1wb3J0IFwiLi9taXhpbnNcIjtcblxuQGZvciAkei12YWx1ZSBmcm9tIDAgdGhyb3VnaCAyNCB7XG4gIC5tZGMtZWxldmF0aW9uLS16I3skei12YWx1ZX0ge1xuICAgIEBpbmNsdWRlIG1kYy1lbGV2YXRpb24oJHotdmFsdWUpO1xuICB9XG59XG5cbi5tZGMtZWxldmF0aW9uLXRyYW5zaXRpb24ge1xuICBAaW5jbHVkZSBtZGMtZWxldmF0aW9uLXRyYW5zaXRpb247XG59XG4iLCIvL1xuLy8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuLy9cblxuQGltcG9ydCBcIi4vdmFyaWFibGVzXCI7XG5cbi8qKlxuICogQXBwbGllcyB0aGUgY29ycmVjdCBjc3MgcnVsZXMgdG8gYW4gZWxlbWVudCB0byBnaXZlIGl0IHRoZSBlbGV2YXRpb24gc3BlY2lmaWVkIGJ5ICR6LXZhbHVlLlxuICogVGhlICR6LXZhbHVlIG11c3QgYmUgYmV0d2VlbiAwIGFuZCAyNC5cbiAqL1xuQG1peGluIG1kYy1lbGV2YXRpb24oJHotdmFsdWUpIHtcbiAgQGlmIHR5cGUtb2YoJHotdmFsdWUpICE9IG51bWJlciBvciBub3QgdW5pdGxlc3MoJHotdmFsdWUpIHtcbiAgICBAZXJyb3IgXCIkei12YWx1ZSBtdXN0IGJlIGEgdW5pdGxlc3MgbnVtYmVyXCI7XG4gIH1cblxuICBAaWYgJHotdmFsdWUgPCAwIG9yICR6LXZhbHVlID4gMjQge1xuICAgIEBlcnJvciBcIiR6LXZhbHVlIG11c3QgYmUgYmV0d2VlbiAwIGFuZCAyNFwiO1xuICB9XG5cbiAgI3skbWRjLWVsZXZhdGlvbi1wcm9wZXJ0eX06XG4gICAgI3tcIiN7bWFwLWdldCgkbWRjLWVsZXZhdGlvbi11bWJyYS1tYXAsICR6LXZhbHVlKX0gI3skbWRjLWVsZXZhdGlvbi11bWJyYS1jb2xvcn1cIn0sXG4gICAgI3tcIiN7bWFwLWdldCgkbWRjLWVsZXZhdGlvbi1wZW51bWJyYS1tYXAsICR6LXZhbHVlKX0gI3skbWRjLWVsZXZhdGlvbi1wZW51bWJyYS1jb2xvcn1cIn0sXG4gICAgI3ttYXAtZ2V0KCRtZGMtZWxldmF0aW9uLWFtYmllbnQtbWFwLCAkei12YWx1ZSl9ICRtZGMtZWxldmF0aW9uLWFtYmllbnQtY29sb3I7XG59XG5cbi8qKlxuICogUmV0dXJucyBhIHN0cmluZyB0aGF0IGNhbiBiZSB1c2VkIGFzIHRoZSB2YWx1ZSBmb3IgYSBgdHJhbnNpdGlvbmAgcHJvcGVydHkgZm9yIGVsZXZhdGlvbi5cbiAqIENhbGxpbmcgdGhpcyBmdW5jdGlvbiBkaXJlY3RseSBpcyB1c2VmdWwgaW4gc2l0dWF0aW9ucyB3aGVyZSBhIGNvbXBvbmVudCBuZWVkcyB0byB0cmFuc2l0aW9uXG4gKiBtb3JlIHRoYW4gb25lIHByb3BlcnR5LlxuICpcbiAqIGBgYHNjc3NcbiAqIC5mb28ge1xuICogICB0cmFuc2l0aW9uOiBtZGMtZWxldmF0aW9uLXRyYW5zaXRpb24tcnVsZSgpLCBvcGFjaXR5IDEwMG1zIGVhc2U7XG4gKiAgIHdpbGwtY2hhbmdlOiAkbWRjLWVsZXZhdGlvbi1wcm9wZXJ0eSwgb3BhY2l0eTtcbiAqIH1cbiAqIGBgYFxuICovXG5AZnVuY3Rpb24gbWRjLWVsZXZhdGlvbi10cmFuc2l0aW9uLXJ1bGUoXG4gICRkdXJhdGlvbjogJG1kYy1lbGV2YXRpb24tdHJhbnNpdGlvbi1kdXJhdGlvbixcbiAgJGVhc2luZzogJG1kYy1lbGV2YXRpb24tdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb24pIHtcbiAgQHJldHVybiAjeyRtZGMtZWxldmF0aW9uLXByb3BlcnR5fSAjeyRkdXJhdGlvbn0gI3skZWFzaW5nfTtcbn1cblxuLyoqXG4gKiBBcHBsaWVzIHRoZSBjb3JyZWN0IGNzcyBydWxlcyBuZWVkZWQgdG8gaGF2ZSBhbiBlbGVtZW50IHRyYW5zaXRpb24gYmV0d2VlbiBlbGV2YXRpb25zLlxuICogVGhpcyBtaXhpbiBzaG91bGQgYmUgYXBwbGllZCB0byBlbGVtZW50cyB3aG9zZSBlbGV2YXRpb24gdmFsdWVzIHdpbGwgY2hhbmdlIGRlcGVuZGluZyBvbiB0aGVpclxuICogY29udGV4dCAoZS5nLiB3aGVuIGFjdGl2ZSBvciBkaXNhYmxlZCkuXG4gKi9cbi8vIE5PVEUodHJhdmlza2F1Zm1hbik6IEJvdGggdGhpcyBtaXhpbiBhbmQgdGhlIGFib3ZlIGZ1bmN0aW9uIHVzZSBkZWZhdWx0IHBhcmFtZXRlcnMgc28gdGhleSBjYW5cbi8vIGJlIHVzZWQgaW4gdGhlIHNhbWUgd2F5IGJ5IGNsaWVudHMuXG5AbWl4aW4gbWRjLWVsZXZhdGlvbi10cmFuc2l0aW9uKFxuICAkZHVyYXRpb246ICRtZGMtZWxldmF0aW9uLXRyYW5zaXRpb24tZHVyYXRpb24sXG4gICRlYXNpbmc6ICRtZGMtZWxldmF0aW9uLXRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uKSB7XG4gIHRyYW5zaXRpb246IG1kYy1lbGV2YXRpb24tdHJhbnNpdGlvbi1ydWxlKCRkdXJhdGlvbiwgJGVhc2luZyk7XG4gIHdpbGwtY2hhbmdlOiAkbWRjLWVsZXZhdGlvbi1wcm9wZXJ0eTtcbn1cbiIsIi8vXG4vLyBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4vL1xuXG5AaW1wb3J0IFwiQG1hdGVyaWFsL2FuaW1hdGlvbi92YXJpYWJsZXNcIjtcblxuJG1kYy1lbGV2YXRpb24tdW1icmEtY29sb3I6IHJnYmEoYmxhY2ssIC4yKTtcbiRtZGMtZWxldmF0aW9uLXBlbnVtYnJhLWNvbG9yOiByZ2JhKGJsYWNrLCAuMTQpO1xuJG1kYy1lbGV2YXRpb24tYW1iaWVudC1jb2xvcjogcmdiYShibGFjaywgLjEyKTtcblxuJG1kYy1lbGV2YXRpb24tdW1icmEtbWFwOiAoXG4gIDA6IFwiMHB4IDBweCAwcHggMHB4XCIsXG4gIDE6IFwiMHB4IDJweCAxcHggLTFweFwiLFxuICAyOiBcIjBweCAzcHggMXB4IC0ycHhcIixcbiAgMzogXCIwcHggM3B4IDNweCAtMnB4XCIsXG4gIDQ6IFwiMHB4IDJweCA0cHggLTFweFwiLFxuICA1OiBcIjBweCAzcHggNXB4IC0xcHhcIixcbiAgNjogXCIwcHggM3B4IDVweCAtMXB4XCIsXG4gIDc6IFwiMHB4IDRweCA1cHggLTJweFwiLFxuICA4OiBcIjBweCA1cHggNXB4IC0zcHhcIixcbiAgOTogXCIwcHggNXB4IDZweCAtM3B4XCIsXG4gIDEwOiBcIjBweCA2cHggNnB4IC0zcHhcIixcbiAgMTE6IFwiMHB4IDZweCA3cHggLTRweFwiLFxuICAxMjogXCIwcHggN3B4IDhweCAtNHB4XCIsXG4gIDEzOiBcIjBweCA3cHggOHB4IC00cHhcIixcbiAgMTQ6IFwiMHB4IDdweCA5cHggLTRweFwiLFxuICAxNTogXCIwcHggOHB4IDlweCAtNXB4XCIsXG4gIDE2OiBcIjBweCA4cHggMTBweCAtNXB4XCIsXG4gIDE3OiBcIjBweCA4cHggMTFweCAtNXB4XCIsXG4gIDE4OiBcIjBweCA5cHggMTFweCAtNXB4XCIsXG4gIDE5OiBcIjBweCA5cHggMTJweCAtNnB4XCIsXG4gIDIwOiBcIjBweCAxMHB4IDEzcHggLTZweFwiLFxuICAyMTogXCIwcHggMTBweCAxM3B4IC02cHhcIixcbiAgMjI6IFwiMHB4IDEwcHggMTRweCAtNnB4XCIsXG4gIDIzOiBcIjBweCAxMXB4IDE0cHggLTdweFwiLFxuICAyNDogXCIwcHggMTFweCAxNXB4IC03cHhcIlxuKTtcblxuJG1kYy1lbGV2YXRpb24tcGVudW1icmEtbWFwOiAoXG4gIDA6IFwiMHB4IDBweCAwcHggMHB4XCIsXG4gIDE6IFwiMHB4IDFweCAxcHggMHB4XCIsXG4gIDI6IFwiMHB4IDJweCAycHggMHB4XCIsXG4gIDM6IFwiMHB4IDNweCA0cHggMHB4XCIsXG4gIDQ6IFwiMHB4IDRweCA1cHggMHB4XCIsXG4gIDU6IFwiMHB4IDVweCA4cHggMHB4XCIsXG4gIDY6IFwiMHB4IDZweCAxMHB4IDBweFwiLFxuICA3OiBcIjBweCA3cHggMTBweCAxcHhcIixcbiAgODogXCIwcHggOHB4IDEwcHggMXB4XCIsXG4gIDk6IFwiMHB4IDlweCAxMnB4IDFweFwiLFxuICAxMDogXCIwcHggMTBweCAxNHB4IDFweFwiLFxuICAxMTogXCIwcHggMTFweCAxNXB4IDFweFwiLFxuICAxMjogXCIwcHggMTJweCAxN3B4IDJweFwiLFxuICAxMzogXCIwcHggMTNweCAxOXB4IDJweFwiLFxuICAxNDogXCIwcHggMTRweCAyMXB4IDJweFwiLFxuICAxNTogXCIwcHggMTVweCAyMnB4IDJweFwiLFxuICAxNjogXCIwcHggMTZweCAyNHB4IDJweFwiLFxuICAxNzogXCIwcHggMTdweCAyNnB4IDJweFwiLFxuICAxODogXCIwcHggMThweCAyOHB4IDJweFwiLFxuICAxOTogXCIwcHggMTlweCAyOXB4IDJweFwiLFxuICAyMDogXCIwcHggMjBweCAzMXB4IDNweFwiLFxuICAyMTogXCIwcHggMjFweCAzM3B4IDNweFwiLFxuICAyMjogXCIwcHggMjJweCAzNXB4IDNweFwiLFxuICAyMzogXCIwcHggMjNweCAzNnB4IDNweFwiLFxuICAyNDogXCIwcHggMjRweCAzOHB4IDNweFwiXG4pO1xuXG4kbWRjLWVsZXZhdGlvbi1hbWJpZW50LW1hcDogKFxuICAwOiBcIjBweCAwcHggMHB4IDBweFwiLFxuICAxOiBcIjBweCAxcHggM3B4IDBweFwiLFxuICAyOiBcIjBweCAxcHggNXB4IDBweFwiLFxuICAzOiBcIjBweCAxcHggOHB4IDBweFwiLFxuICA0OiBcIjBweCAxcHggMTBweCAwcHhcIixcbiAgNTogXCIwcHggMXB4IDE0cHggMHB4XCIsXG4gIDY6IFwiMHB4IDFweCAxOHB4IDBweFwiLFxuICA3OiBcIjBweCAycHggMTZweCAxcHhcIixcbiAgODogXCIwcHggM3B4IDE0cHggMnB4XCIsXG4gIDk6IFwiMHB4IDNweCAxNnB4IDJweFwiLFxuICAxMDogXCIwcHggNHB4IDE4cHggM3B4XCIsXG4gIDExOiBcIjBweCA0cHggMjBweCAzcHhcIixcbiAgMTI6IFwiMHB4IDVweCAyMnB4IDRweFwiLFxuICAxMzogXCIwcHggNXB4IDI0cHggNHB4XCIsXG4gIDE0OiBcIjBweCA1cHggMjZweCA0cHhcIixcbiAgMTU6IFwiMHB4IDZweCAyOHB4IDVweFwiLFxuICAxNjogXCIwcHggNnB4IDMwcHggNXB4XCIsXG4gIDE3OiBcIjBweCA2cHggMzJweCA1cHhcIixcbiAgMTg6IFwiMHB4IDdweCAzNHB4IDZweFwiLFxuICAxOTogXCIwcHggN3B4IDM2cHggNnB4XCIsXG4gIDIwOiBcIjBweCA4cHggMzhweCA3cHhcIixcbiAgMjE6IFwiMHB4IDhweCA0MHB4IDdweFwiLFxuICAyMjogXCIwcHggOHB4IDQycHggN3B4XCIsXG4gIDIzOiBcIjBweCA5cHggNDRweCA4cHhcIixcbiAgMjQ6IFwiMHB4IDlweCA0NnB4IDhweFwiXG4pO1xuXG4vKipcbiAqIFRoZSBjc3MgcHJvcGVydHkgdXNlZCBmb3IgZWxldmF0aW9uLiBJbiBtb3N0IGNhc2VzIHRoaXMgc2hvdWxkIG5vdCBiZSBjaGFuZ2VkLiBJdCBpcyBleHBvc2VkXG4gKiBhcyBhIHZhcmlhYmxlIGZvciBhYnN0cmFjdGlvbiAvIGVhc3kgdXNlIHdoZW4gbmVlZGluZyB0byByZWZlcmVuY2UgdGhlIHByb3BlcnR5IGRpcmVjdGx5LCBmb3JcbiAqIGV4YW1wbGUgaW4gYSBgd2lsbC1jaGFuZ2VgIHJ1bGUuXG4gKi9cbiRtZGMtZWxldmF0aW9uLXByb3BlcnR5OiBib3gtc2hhZG93ICFkZWZhdWx0O1xuXG4vKipcbiAqIFRoZSBkZWZhdWx0IGR1cmF0aW9uIHZhbHVlIGZvciBlbGV2YXRpb24gdHJhbnNpdGlvbnMuXG4gKi9cbiRtZGMtZWxldmF0aW9uLXRyYW5zaXRpb24tZHVyYXRpb246IDI4MG1zICFkZWZhdWx0O1xuXG4vKipcbiAqIFRoZSBkZWZhdWx0IGVhc2luZyB2YWx1ZSBmb3IgZWxldmF0aW9uIHRyYW5zaXRpb25zLlxuICovXG4kbWRjLWVsZXZhdGlvbi10cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogJG1kYy1hbmltYXRpb24tc3RhbmRhcmQtY3VydmUtdGltaW5nLWZ1bmN0aW9uICFkZWZhdWx0O1xuIiwiLy9cbi8vIENvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbi8vXG5cbiRtZGMtYW5pbWF0aW9uLWRlY2VsZXJhdGlvbi1jdXJ2ZS10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllcigwLCAwLCAuMiwgMSkgIWRlZmF1bHQ7XG4kbWRjLWFuaW1hdGlvbi1zdGFuZGFyZC1jdXJ2ZS10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllciguNCwgMCwgLjIsIDEpICFkZWZhdWx0O1xuJG1kYy1hbmltYXRpb24tYWNjZWxlcmF0aW9uLWN1cnZlLXRpbWluZy1mdW5jdGlvbjogY3ViaWMtYmV6aWVyKC40LCAwLCAxLCAxKSAhZGVmYXVsdDtcbiRtZGMtYW5pbWF0aW9uLXNoYXJwLWN1cnZlLXRpbWluZy1mdW5jdGlvbjogY3ViaWMtYmV6aWVyKC40LCAwLCAuNiwgMSkgIWRlZmF1bHQ7XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFFMEdBOzs7O0dBSUc7QUFHSDs7R0FFRztBQUdIOztHQUVHO0FEdEdIOzs7R0FHRztBQWdCSDs7Ozs7Ozs7Ozs7R0FXRztBQU9IOzs7O0dBSUc7QUR4Q0QsQUFBQSxrQkFBa0IsQ0FBVztFQ1k3QixVQUEwQixFQUN4QixrQ0FBaUYsRUFDakYsbUNBQXVGLEVBQ3ZGLGVBQWdELENDZGpCLG1CQUFLLEdGQ3JDOztBQUZELEFBQUEsa0JBQWtCLENBQVc7RUNZN0IsVUFBMEIsRUFDeEIsbUNBQWlGLEVBQ2pGLG1DQUF1RixFQUN2RixlQUFnRCxDQ2RqQixtQkFBSyxHRkNyQzs7QUFGRCxBQUFBLGtCQUFrQixDQUFXO0VDWTdCLFVBQTBCLEVBQ3hCLG1DQUFpRixFQUNqRixtQ0FBdUYsRUFDdkYsZUFBZ0QsQ0NkakIsbUJBQUssR0ZDckM7O0FBRkQsQUFBQSxrQkFBa0IsQ0FBVztFQ1k3QixVQUEwQixFQUN4QixtQ0FBaUYsRUFDakYsbUNBQXVGLEVBQ3ZGLGVBQWdELENDZGpCLG1CQUFLLEdGQ3JDOztBQUZELEFBQUEsa0JBQWtCLENBQVc7RUNZN0IsVUFBMEIsRUFDeEIsbUNBQWlGLEVBQ2pGLG1DQUF1RixFQUN2RixnQkFBZ0QsQ0NkakIsbUJBQUssR0ZDckM7O0FBRkQsQUFBQSxrQkFBa0IsQ0FBVztFQ1k3QixVQUEwQixFQUN4QixtQ0FBaUYsRUFDakYsbUNBQXVGLEVBQ3ZGLGdCQUFnRCxDQ2RqQixtQkFBSyxHRkNyQzs7QUFGRCxBQUFBLGtCQUFrQixDQUFXO0VDWTdCLFVBQTBCLEVBQ3hCLG1DQUFpRixFQUNqRixvQ0FBdUYsRUFDdkYsZ0JBQWdELENDZGpCLG1CQUFLLEdGQ3JDOztBQUZELEFBQUEsa0JBQWtCLENBQVc7RUNZN0IsVUFBMEIsRUFDeEIsbUNBQWlGLEVBQ2pGLG9DQUF1RixFQUN2RixnQkFBZ0QsQ0NkakIsbUJBQUssR0ZDckM7O0FBRkQsQUFBQSxrQkFBa0IsQ0FBVztFQ1k3QixVQUEwQixFQUN4QixtQ0FBaUYsRUFDakYsb0NBQXVGLEVBQ3ZGLGdCQUFnRCxDQ2RqQixtQkFBSyxHRkNyQzs7QUFGRCxBQUFBLGtCQUFrQixDQUFXO0VDWTdCLFVBQTBCLEVBQ3hCLG1DQUFpRixFQUNqRixvQ0FBdUYsRUFDdkYsZ0JBQWdELENDZGpCLG1CQUFLLEdGQ3JDOztBQUZELEFBQUEsbUJBQW1CLENBQVU7RUNZN0IsVUFBMEIsRUFDeEIsbUNBQWlGLEVBQ2pGLHFDQUF1RixFQUN2RixnQkFBZ0QsQ0NkakIsbUJBQUssR0ZDckM7O0FBRkQsQUFBQSxtQkFBbUIsQ0FBVTtFQ1k3QixVQUEwQixFQUN4QixtQ0FBaUYsRUFDakYscUNBQXVGLEVBQ3ZGLGdCQUFnRCxDQ2RqQixtQkFBSyxHRkNyQzs7QUFGRCxBQUFBLG1CQUFtQixDQUFVO0VDWTdCLFVBQTBCLEVBQ3hCLG1DQUFpRixFQUNqRixxQ0FBdUYsRUFDdkYsZ0JBQWdELENDZGpCLG1CQUFLLEdGQ3JDOztBQUZELEFBQUEsbUJBQW1CLENBQVU7RUNZN0IsVUFBMEIsRUFDeEIsbUNBQWlGLEVBQ2pGLHFDQUF1RixFQUN2RixnQkFBZ0QsQ0NkakIsbUJBQUssR0ZDckM7O0FBRkQsQUFBQSxtQkFBbUIsQ0FBVTtFQ1k3QixVQUEwQixFQUN4QixtQ0FBaUYsRUFDakYscUNBQXVGLEVBQ3ZGLGdCQUFnRCxDQ2RqQixtQkFBSyxHRkNyQzs7QUFGRCxBQUFBLG1CQUFtQixDQUFVO0VDWTdCLFVBQTBCLEVBQ3hCLG1DQUFpRixFQUNqRixxQ0FBdUYsRUFDdkYsZ0JBQWdELENDZGpCLG1CQUFLLEdGQ3JDOztBQUZELEFBQUEsbUJBQW1CLENBQVU7RUNZN0IsVUFBMEIsRUFDeEIsb0NBQWlGLEVBQ2pGLHFDQUF1RixFQUN2RixnQkFBZ0QsQ0NkakIsbUJBQUssR0ZDckM7O0FBRkQsQUFBQSxtQkFBbUIsQ0FBVTtFQ1k3QixVQUEwQixFQUN4QixvQ0FBaUYsRUFDakYscUNBQXVGLEVBQ3ZGLGdCQUFnRCxDQ2RqQixtQkFBSyxHRkNyQzs7QUFGRCxBQUFBLG1CQUFtQixDQUFVO0VDWTdCLFVBQTBCLEVBQ3hCLG9DQUFpRixFQUNqRixxQ0FBdUYsRUFDdkYsZ0JBQWdELENDZGpCLG1CQUFLLEdGQ3JDOztBQUZELEFBQUEsbUJBQW1CLENBQVU7RUNZN0IsVUFBMEIsRUFDeEIsb0NBQWlGLEVBQ2pGLHFDQUF1RixFQUN2RixnQkFBZ0QsQ0NkakIsbUJBQUssR0ZDckM7O0FBRkQsQUFBQSxtQkFBbUIsQ0FBVTtFQ1k3QixVQUEwQixFQUN4QixxQ0FBaUYsRUFDakYscUNBQXVGLEVBQ3ZGLGdCQUFnRCxDQ2RqQixtQkFBSyxHRkNyQzs7QUFGRCxBQUFBLG1CQUFtQixDQUFVO0VDWTdCLFVBQTBCLEVBQ3hCLHFDQUFpRixFQUNqRixxQ0FBdUYsRUFDdkYsZ0JBQWdELENDZGpCLG1CQUFLLEdGQ3JDOztBQUZELEFBQUEsbUJBQW1CLENBQVU7RUNZN0IsVUFBMEIsRUFDeEIscUNBQWlGLEVBQ2pGLHFDQUF1RixFQUN2RixnQkFBZ0QsQ0NkakIsbUJBQUssR0ZDckM7O0FBRkQsQUFBQSxtQkFBbUIsQ0FBVTtFQ1k3QixVQUEwQixFQUN4QixxQ0FBaUYsRUFDakYscUNBQXVGLEVBQ3ZGLGdCQUFnRCxDQ2RqQixtQkFBSyxHRkNyQzs7QUFGRCxBQUFBLG1CQUFtQixDQUFVO0VDWTdCLFVBQTBCLEVBQ3hCLHFDQUFpRixFQUNqRixxQ0FBdUYsRUFDdkYsZ0JBQWdELENDZGpCLG1CQUFLLEdGQ3JDOztBQUdILEFBQUEseUJBQXlCLENBQUM7RUN5Q3hCLFVBQVUsRUFiRixVQUEwQixDQUFDLEtBQVksQ0FBQyw0QkFBVTtFQWMxRCxXQUFXLEVDNkNZLFVBQVUsR0ZyRmxDIn0= */.local-weather-local-weather-loader {
}

.local-weather-local-weather-loader__buffering-dots {
}

.local-weather-local-weather-loader__buffer {
}

.local-weather-local-weather-loader__primary {
}

.local-weather-local-weather-loader__inner {
}

.local-weather-local-weather-loader__secondary {
}

.local-weather-local-weather-error {
}

.local-weather-local-weather-error--open {
}

.local-weather-local-weather-error__surface {
}

.local-weather-local-weather-error__header {
}

.local-weather-local-weather-error__header__title {
}

.local-weather-local-weather-error__button {
}

.local-weather-local-weather__card {
}

.local-weather-local-weather__primary {
}

.local-weather-local-weather__title {
}

.local-weather-local-weather__subtitle {
}

.local-weather-local-weather__supporting-text {
}

.local-weather-local-weather__details {
}

.local-weather-local-weather__media {
}

.local-weather-local-weather__actions {
}

.local-weather-local-weather__action {
}

.local-weather-local-weather__app {
  display: flex;
  flex-flow: row wrap;
  align-items: center;
  justify-content: space-around;
  width: auto;
  height: auto;
  margin: auto;
  padding: 16px;
}

.local-weather-local-weather__icon {
}

.local-weather-local-weather__weather {
}

.local-weather-local-weather__description {
}

.local-weather-local-weather__temprature {
  width: auto;
  height: auto;
}

.local-weather-local-weather__button {
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */